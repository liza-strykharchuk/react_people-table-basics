{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","NoPeople.tsx","components/LoadError.tsx","components/Loader/InfoPerson.tsx","components/TablePeople.tsx","PeoplePage.tsx","Home.tsx","NavList.tsx","NotFound.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","NoPeople","LoadingError","InfoPerson","person","ifPersonPind","personLink","useParams","classNames","slug","to","sex","name","born","died","motherName","fatherName","TablePeople","people","findPeople","find","map","PeoplePage","useState","setPeople","newError","setNewError","load","setLoad","useEffect","peopleFromServer","catch","error","finally","length","Home","isActiveTab","isActive","NavPage","role","NotFound","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8df61ed3.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const NoPeople = () => (\n  <p data-cy=\"noPeopleMessage\">\n    There are no people on the server\n  </p>\n);\n","export const LoadingError = () => {\n  return (\n    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n      Something went wrong\n    </p>\n  );\n};\n","import React from 'react';\n\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types/Person';\n\ntype Propds = {\n  person: Person;\n  ifPersonPind: (name: string | null) => Person | undefined;\n};\n\nexport const InfoPerson: React.FC<Propds> = ({ person, ifPersonPind }) => {\n  const { personLink } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': personLink === person.slug,\n      })}\n    >\n      <td>\n        <Link\n          to={`${person.slug}`}\n          className={classNames({\n            'has-text-danger': person.sex === 'f',\n          })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.motherName\n            && ifPersonPind(person.motherName)\n          ? (\n            <Link\n              className=\"has-text-danger\"\n              to={`${\n                ifPersonPind(person.motherName)?.slug || ''\n              }`}\n            >\n              {person.motherName}\n            </Link>\n          ) : (\n            <Link\n              className=\"has-text-danger\"\n              to={`${\n                ifPersonPind(person.motherName)?.slug || ''\n              }`}\n            >\n              -\n            </Link>\n          )}\n      </td>\n\n      <td>\n        {person.fatherName\n            && ifPersonPind(person.fatherName)\n          ? (\n            <Link\n              className=\"has-text-danger\"\n              to={`${\n                ifPersonPind(person.fatherName)?.slug || ''\n              }`}\n            >\n              {person.fatherName}\n            </Link>\n          ) : (\n            <Link\n              className=\"has-text-danger\"\n              to={`${\n                ifPersonPind(person.fatherName)?.slug || ''\n              }`}\n            >\n              -\n            </Link>\n          )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { Person } from '../types';\nimport { InfoPerson } from './Loader/InfoPerson';\n\ntype Prors = {\n  people: Person[],\n};\n\nexport const TablePeople: React.FC<Prors> = ({ people }) => {\n  const findPeople = (name: string | null) => {\n    return people.find(person => person.name === name);\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <InfoPerson\n            key={person.slug}\n            person={person}\n            ifPersonPind={findPeople}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { Person } from './types/Person';\nimport { getPeople } from './api';\nimport { Loader } from './components/Loader';\nimport { NoPeople } from './NoPeople';\nimport { LoadingError } from './components/LoadError';\nimport { TablePeople } from './components/TablePeople';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [newError, setNewError] = useState(false);\n  const [load, setLoad] = useState(true);\n\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        setLoad(true);\n        setPeople(peopleFromServer);\n      })\n      .catch((error) => {\n        setNewError(true);\n        throw error;\n      })\n      .finally(() => {\n        setLoad(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"box table-container\">\n        {load ? (\n          <Loader />\n        ) : (\n          <>\n            {newError && (\n              <LoadingError />\n            )}\n\n            {people.length === 0 && !load && (\n              <NoPeople />\n            )}\n\n            <TablePeople people={people} />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","export const Home = () => (\n  <div className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  </div>\n);\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst isActiveTab = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const NavPage = () => {\n  return (\n    <nav\n      className=\"navbar is-fixed-top has-shadow\"\n      data-cy=\"nav\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={isActiveTab}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={isActiveTab}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const NotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport { PeoplePage } from './PeoplePage';\nimport { Home } from './Home';\nimport { NavPage } from './NavList';\nimport { NotFound } from './NotFound';\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavPage />\n\n    <main>\n      <div className=\"constainer\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route path=\":personLink\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}